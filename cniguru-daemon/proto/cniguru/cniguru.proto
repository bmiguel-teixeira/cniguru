// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package cniguru_proto;

// the protocol used internally between the proxy and the agents
service IntProto {
    // Get all the veth pair interfaces in a container
    rpc GetVethIntfPairs (GetVethIntfPairsReq) returns (GetVethIntfPairsRes) {}
}

// request info about all veth interface pairs for a given container
// it's a message sent from a proxy to an agent
message GetVethIntfPairsReq {
    string container_id = 1;
    ContainerRuntime runtime = 2;
}

// response to `GetVethIntfPairsReq`, sent from an agent to a proxy
message GetVethIntfPairsRes {
    uint32 container_pid = 1;
    repeated VethIntfPair interfaces = 2;
}

// The supported container runtimes
enum ContainerRuntime {
    DOCKER = 0;
}

// A representation of a veth interface pair
message VethIntfPair {
    // the container side of a veth pair
    VethIntf container = 1;
    // the node/host side of a veth pair
    VethIntf node = 2;
}

// Details about a veth interface
message VethIntf {
    string name = 1;
    uint32 ifindex = 2;
    uint32 peer_ifindex = 3;
    uint32 mtu = 4;
    string mac_address = 5;
    string bridge = 6;
    string ip_address = 7;
}
